'use strict';(function(g,f){"object"===typeof exports&&"undefined"!==typeof module?f(exports):"function"===typeof define&&define.amd?define(["exports"],f):(g=g||self,f(g.ResponsiveGamepad={}))})(this,function(g){function f(a){for(var c=1;c<arguments.length;c++){var e=null!=arguments[c]?arguments[c]:{},b=Object.keys(e);"function"===typeof Object.getOwnPropertySymbols&&(b=b.concat(Object.getOwnPropertySymbols(e).filter(function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable})));b.forEach(function(c){var b=
e[c];c in a?Object.defineProperty(a,c,{value:b,enumerable:!0,configurable:!0,writable:!0}):a[c]=b})}return a}function m(a,c){let b;a.type.includes("touch")?b=a.touches[0]:a.type.includes("mouse")&&(b=a);return{rectCenterX:(c.right-c.left)/2,rectCenterY:(c.bottom-c.top)/2,touchX:b.clientX-c.left,touchY:b.clientY-c.top}}let b={DPAD_UP:"DPAD_UP",DPAD_RIGHT:"DPAD_RIGHT",DPAD_DOWN:"DPAD_DOWN",DPAD_LEFT:"DPAD_LEFT",LEFT_ANALOG_HORIZONTAL_AXIS:"LEFT_ANALOG_HORIZONTAL_AXIS",LEFT_ANALOG_VERTICAL_AXIS:"LEFT_ANALOG_VERTICAL_AXIS",
LEFT_ANALOG_UP:"LEFT_ANALOG_UP",LEFT_ANALOG_RIGHT:"LEFT_ANALOG_RIGHT",LEFT_ANALOG_DOWN:"LEFT_ANALOG_DOWN",LEFT_ANALOG_LEFT:"LEFT_ANALOG_LEFT",RIGHT_ANALOG_HORIZONTAL_AXIS:"RIGHT_ANALOG_HORIZONTAL_AXIS",RIGHT_ANALOG_VERTICAL_AXIS:"RIGHT_ANALOG_VERTICAL_AXIS",RIGHT_ANALOG_UP:"RIGHT_ANALOG_UP",RIGHT_ANALOG_RIGHT:"RIGHT_ANALOG_RIGHT",RIGHT_ANALOG_DOWN:"RIGHT_ANALOG_DOWN",RIGHT_ANALOG_LEFT:"RIGHT_ANALOG_LEFT",A:"A",B:"B",X:"X",Y:"Y",LEFT_TRIGGER:"LEFT_TRIGGER",LEFT_BUMPER:"LEFT_BUMPER",RIGHT_TRIGGER:"RIGHT_TRIGGER",
RIGHT_BUMPER:"RIGHT_BUMPER",SELECT:"SELECT",START:"START",SPECIAL:"SPECIAL"};class h{constructor(){}enable(){throw Error("enable() must be overridden");}disable(){throw Error("disable() must be overridden");}getState(){throw Error("getState() must be overridden");}}let p="input textarea button select option optgroup label datalist".split(" "),q=["Alt","Control","Meta","OS"];class r extends h{constructor(){super();this.keymap={};Object.keys(b).forEach((a)=>{this.keymap[a]={keys:[],value:void 0}});
this.enableIgnoreWhenInputElementFocused();this.enableIgnoreWhenModifierState();this._boundUpdateKeymapValues=this._updateKeymapValues.bind(this)}enable(){if("undefined"===typeof window)throw Error("Keyboard can only be used with a browser environment");window.addEventListener("keyup",this._boundUpdateKeymapValues);window.addEventListener("keydown",this._boundUpdateKeymapValues)}disable(){if("undefined"===typeof window)throw Error("Keyboard can only be used with a browser environment");window.removeEventListener("keyup",
this._boundUpdateKeymapValues);window.removeEventListener("keydown",this._boundUpdateKeymapValues)}getState(){let a=f({},b);Object.keys(this.keymap).forEach((c)=>{a[c]=this.keymap[c].value});Object.keys(a).forEach((c)=>{"string"===typeof a[c]&&delete a[c]});return a}enableIgnoreWhenInputElementFocused(){this.ignoreWhenInputElementFocused=!0}disableIgnoreWhenInputElementFocused(){this.ignoreWhenInputElementFocused=!1}enableIgnoreWhenModifierState(){this.ignoreOnModifierState=!0}disableIgnoreWhenModifierState(){this.ignoreOnModifierState=
!1}setKeysToResponsiveGamepadInput(a,c){if(!a||!c||0===a.length)throw Error("Could not set the specificed keyboard keys to input");"string"===typeof a&&(a=[a]);this.keymap[c].keys=a}_isFocusedOnInputElement(){return p.some((a)=>document.activeElement&&document.activeElement.tagName.toLowerCase()===a.toLowerCase()?!0:!1)}_isInModifierState(a){return q.some((c)=>a.getModifierState(c)||a.code===c)}_updateKeymapValues(a){this.ignoreWhenInputElementFocused&&this._isFocusedOnInputElement()||this.ignoreOnModifierState&&
this._isInModifierState(a)||(a.preventDefault(),Object.keys(this.keymap).some((c)=>this.keymap[c].keys.some((b)=>b===a.code?(this.keymap[c].value="keydown"===a.type?!0:!1,!0):!1)))}}class t extends h{constructor(){super();this.gamepadAnalogStickDeadZone=.25;this.keymap={}}enable(){}disable(){}getState(a){let c=this._getGamepads();a||(a=0);let e=c[a];if(!e)return!1;Object.keys(this.keymap).forEach((a)=>{if(this.keymap[a].buttons)this.keymap[a].value=this.keymap[a].buttons.some((a)=>this._isButtonPressed(e,
a));else if(this.keymap[a].axis){let c=this._getAnalogStickAxis(e,this.keymap[a].axis);this.keymap[a].value=c}});let d=f({},b);Object.keys(this.keymap).forEach((a)=>{d[a]=this.keymap[a].value});d[b.LEFT_ANALOG_DOWN]=d.LEFT_ANALOG_VERTICAL_AXIS>this.gamepadAnalogStickDeadZone;d[b.LEFT_ANALOG_UP]=d.LEFT_ANALOG_VERTICAL_AXIS<-1*this.gamepadAnalogStickDeadZone;d[b.LEFT_ANALOG_RIGHT]=d.LEFT_ANALOG_HORIZONTAL_AXIS>this.gamepadAnalogStickDeadZone;d[b.LEFT_ANALOG_LEFT]=d.LEFT_ANALOG_HORIZONTAL_AXIS<-1*this.gamepadAnalogStickDeadZone;
d[b.RIGHT_ANALOG_DOWN]=d.RIGHT_ANALOG_VERTICAL_AXIS>this.gamepadAnalogStickDeadZone;d[b.RIGHT_ANALOG_UP]=d.RIGHT_ANALOG_VERTICAL_AXIS<-1*this.gamepadAnalogStickDeadZone;d[b.RIGHT_ANALOG_RIGHT]=d.RIGHT_ANALOG_HORIZONTAL_AXIS>this.gamepadAnalogStickDeadZone;d[b.RIGHT_ANALOG_LEFT]=d.RIGHT_ANALOG_HORIZONTAL_AXIS<-1*this.gamepadAnalogStickDeadZone;Object.keys(d).forEach((a)=>{"string"===typeof d[a]&&delete d[a]});return d}setGamepadButtonsToResponsiveGamepadInput(a,c){if(!a||!c||0===a.length)throw Error("Could not set the specificed buttons to input");
"number"===typeof a&&(a=[a]);this.keymap[c]={};this.keymap[c].buttons=a}setGamepadAxisToResponsiveGamepadInput(a,c){if(void 0===a||!c)throw Error("Could not set the specificed buttons to input");if("number"===typeof axes)throw Error("Must pass in an axis id");this.keymap[c]={};this.keymap[c].axis=a}_isButtonPressed(a,c){return a.buttons[c]?a.buttons[c].pressed:!1}_getGamepads(){return navigator.getGamepads?navigator.getGamepads():[]}_getAnalogStickAxis(a,c){return a?a.axes[c]||0:0}}let n="touchstart touchmove touchend mousedown mousemove mouseup mouseleave".split(" ");
class k{constructor(a){if(!a)throw Error("Touch inputs require an element.");this.listeners=[];this.element=a;this._addTouchStyles();this.boundingClientRect=void 0;this._updateElementBoundingClientRect();this.active=!1;this.boundUpdateElementRect=this._updateElementBoundingClientRect.bind(this);this.boundTouchEvent=this._touchEvent.bind(this)}remove(){this._removeTouchStyles();this.stopListening();this.element=void 0}listen(){if(!this.element)throw Error("You must supply an element first with add()");
window.addEventListener("resize",this.boundUpdateElementRect);n.forEach((a)=>{this.element.addEventListener(a,this.boundTouchEvent)})}stopListening(){if(!this.element)throw Error("You must supply an element first with add()");window.removeEventListener("resize",this.boundUpdateElementRect);n.forEach((a)=>{this.element.removeEventListener(a,this.boundTouchEvent)})}_touchEvent(a){if(a&&(!a.type.includes("touch")||a.touches)){a.preventDefault();var c="touchstart"===a.type||"touchmove"===a.type||"mousedown"===
a.type,b="mousemove"===a.type,d=!c&&!b;this._updateActiveStatus(c,d);this._updateTouchStyles(c,b,d);if(this.onTouchEvent)this.onTouchEvent(a,c,b,d)}}_updateElementBoundingClientRect(){this.boundingClientRect=this.element.getBoundingClientRect()}_addTouchStyles(){this.element.style.userSelect="none"}_removeTouchStyles(){this.element.style.userSelect=""}_updateTouchStyles(a,c){c||(a?this.element.classList.add("active"):this.element.classList.remove("active"))}_updateActiveStatus(a,c){this.active&&c?
this.active=!1:!this.active&&a&&(this.active=!0)}}class u extends k{constructor(a,c){super(a);this.config=c?c:{allowMultipleDirections:!1};this._resetState()}_resetState(){this.state={DPAD_UP:!1,DPAD_RIGHT:!1,DPAD_DOWN:!1,DPAD_LEFT:!1}}onTouchEvent(a){if(this.active){var {rectCenterX:a,rectCenterY:c,touchX:b,touchY:d}=m(a,this.boundingClientRect);if(!(b>a+this.boundingClientRect.width/2+50)){this._resetState();var l=this.boundingClientRect.width/20,f=this.boundingClientRect.height/20;this.config.allowMultipleDirections?
(this.setHorizontalState(b,l),this.setVerticalState(d,f)):Math.abs(a-b)+this.boundingClientRect.width/8>Math.abs(c-d)?this.setHorizontalState(b,l):this.setVerticalState(d)}}else this._resetState()}setHorizontalState(a,c){c&&Math.abs(this.boundingClientRect.width/2-a)<=c||(a<this.boundingClientRect.width/2?this.state.DPAD_LEFT=!0:this.state.DPAD_RIGHT=!0)}setVerticalState(a,c){c&&Math.abs(this.boundingClientRect.height/2-a)<c||(a<this.boundingClientRect.height/2?this.state.DPAD_UP=!0:this.state.DPAD_DOWN=
!0)}}class v extends k{constructor(a){super(a);this._resetState()}_resetState(){this.state={HORIZONTAL_AXIS:0,VERTICAL_AXIS:0,UP:!1,RIGHT:!1,DOWN:!1,LEFT:!1};this.element.style.transform="translate(0px, 0px)";this.deadzone=.5}onTouchEvent(a){if(this.active){var {rectCenterX:a,rectCenterY:c,touchX:b,touchY:d}=m(a,this.boundingClientRect);b=(b-a)/a;1<b?b=1:-1>b&&(b=-1);d=(d-c)/c;1<d?d=1:-1>d&&(d=-1);this.element.style.transform=`translate(${a*b/2}px, ${c*d/2}px)`;this.state.HORIZONTAL_AXIS=b;this.state.VERTICAL_AXIS=
d;this.state.UP=!1;this.state.RIGHT=!1;this.state.DOWN=!1;this.state.LEFT=!1;Math.abs(b)>this.deadzone&&(0<b?this.state.RIGHT=!0:0>b&&(this.state.LEFT=!0));Math.abs(d)>this.deadzone&&(0<d?this.state.DOWN=!0:0>d&&(this.state.UP=!0))}else this._resetState()}}class w extends k{constructor(a,b){super(a);this.input=b}}class x extends h{constructor(){super();this.enabled=!1;this.dpads=[];this.leftAnalogs=[];this.rightAnalogs=[];this.buttons=[]}enable(){if("undefined"===typeof window)throw Error("TouchInput can only be used with a browser environment");
this.enabled=!0;this.dpads.forEach((a)=>a.listen());this.leftAnalogs.forEach((a)=>a.listen());this.rightAnalogs.forEach((a)=>a.listen());this.buttons.forEach((a)=>a.listen())}disable(){if("undefined"===typeof window)throw Error("TouchInput can only be used with a browser environment");this.enabled=!1;this.dpads.forEach((a)=>a.stopListening());this.leftAnalogs.forEach((a)=>a.stopListening());this.rightAnalogs.forEach((a)=>a.stopListening());this.buttons.forEach((a)=>a.stopListening())}getState(){let a=
f({},b);this.buttons.forEach((b)=>{a[b.input]=b.active});this.dpads.forEach((b)=>{Object.keys(b.state).forEach((c)=>{a[c]=b.state[c]||a[c]})});0<this.leftAnalogs.length&&(a.LEFT_ANALOG_HORIZONTAL_AXIS=this.leftAnalogs[0].state.HORIZONTAL_AXIS,a.LEFT_ANALOG_VERTICAL_AXIS=this.leftAnalogs[0].state.VERTICAL_AXIS,a.LEFT_ANALOG_UP=this.leftAnalogs[0].state.UP,a.LEFT_ANALOG_RIGHT=this.leftAnalogs[0].state.RIGHT,a.LEFT_ANALOG_DOWN=this.leftAnalogs[0].state.DOWN,a.LEFT_ANALOG_LEFT=this.leftAnalogs[0].state.LEFT);
0<this.rightAnalogs.length&&(a.RIGHT_ANALOG_HORIZONTAL_AXIS=this.rightAnalogs[0].state.HORIZONTAL_AXIS,a.RIGHT_ANALOG_VERTICAL_AXIS=this.rightAnalogs[0].state.VERTICAL_AXIS,a.RIGHT_ANALOG_UP=this.rightAnalogs[0].state.UP,a.RIGHT_ANALOG_RIGHT=this.rightAnalogs[0].state.RIGHT,a.RIGHT_ANALOG_DOWN=this.rightAnalogs[0].state.DOWN,a.RIGHT_ANALOG_LEFT=this.rightAnalogs[0].state.LEFT);Object.keys(a).forEach((b)=>{"string"===typeof a[b]&&delete a[b]});return a}addButtonInput(a,b){let c=new w(a,b);this.enabled&&
c.listen();this.buttons.push(c);return()=>{c.stopListening();this.buttons.splice(this.buttons.indexOf(c),1)}}addDpadInput(a,b){let c=new u(a,b);this.enabled&&c.listen();this.dpads.push(c);return()=>{c.stopListening();this.dpads.splice(this.dpads.indexOf(c),1)}}addLeftAnalogInput(a){this.addAnalogInput(a,"LEFT")}addRightAnalogInput(a){this.addAnalogInput(a,"RIGHT")}addAnalogInput(a,b){let c=new v(a);this.enabled&&c.listen();if("LEFT"===b)return this.leftAnalogs.push(c),()=>{c.stopListening();this.leftAnalogs.splice(this.leftAnalogs.indexOf(c),
1)};this.rightAnalogs.push(c);return()=>{c.stopListening();this.rightAnalogs.splice(this.rightAnalogs.indexOf(c),1)}}}class y{constructor(){this.RESPONSIVE_GAMEPAD_INPUTS=b;this._enabled=!1;this._multipleDirectionInput=!0;this.Keyboard=new r;this.Gamepad=new t;this.TouchInput=new x;this.Keyboard.setKeysToResponsiveGamepadInput(["ArrowUp","Numpad8"],b.DPAD_UP);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyW"],b.LEFT_ANALOG_UP);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyI"],b.RIGHT_ANALOG_UP);
this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([12],b.DPAD_UP);this.Keyboard.setKeysToResponsiveGamepadInput(["ArrowRight","Numpad6"],b.DPAD_RIGHT);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyD"],b.LEFT_ANALOG_RIGHT);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyL"],b.RIGHT_ANALOG_RIGHT);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([15],b.DPAD_RIGHT);this.Keyboard.setKeysToResponsiveGamepadInput(["ArrowDown","Numpad5","Numpad2"],b.DPAD_DOWN);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyS"],
b.LEFT_ANALOG_DOWN);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyK"],b.RIGHT_ANALOG_DOWN);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([13],b.DPAD_DOWN);this.Keyboard.setKeysToResponsiveGamepadInput(["ArrowLeft","Numpad4"],b.DPAD_LEFT);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyA"],b.LEFT_ANALOG_LEFT);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyJ"],b.RIGHT_ANALOG_LEFT);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([14],b.DPAD_LEFT);this.Gamepad.setGamepadAxisToResponsiveGamepadInput([0],
b.LEFT_ANALOG_HORIZONTAL_AXIS);this.Gamepad.setGamepadAxisToResponsiveGamepadInput([1],b.LEFT_ANALOG_VERTICAL_AXIS);this.Gamepad.setGamepadAxisToResponsiveGamepadInput([2],b.RIGHT_ANALOG_HORIZONTAL_AXIS);this.Gamepad.setGamepadAxisToResponsiveGamepadInput([3],b.RIGHT_ANALOG_VERTICAL_AXIS);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyX","Semicolon","Numpad7"],b.A);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([0],b.A);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyZ","Escape","Quote",
"Backspace","Numpad9"],b.B);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([1],b.B);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyC"],b.X);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([2],b.X);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyV"],b.Y);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([3],b.Y);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyQ"],b.LEFT_TRIGGER);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([6],b.LEFT_TRIGGER);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyE"],
b.LEFT_BUMPER);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([4],b.LEFT_BUMPER);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyU"],b.RIGHT_TRIGGER);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([7],b.RIGHT_TRIGGER);this.Keyboard.setKeysToResponsiveGamepadInput(["KeyO"],b.RIGHT_BUMPER);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([5],b.RIGHT_BUMPER);this.Keyboard.setKeysToResponsiveGamepadInput(["Enter","Numpad3"],b.START);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([9],
b.START);this.Keyboard.setKeysToResponsiveGamepadInput(["ShiftRight","ShiftLeft","Tab","Numpad1"],b.SELECT);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([8],b.SELECT);this.Keyboard.setKeysToResponsiveGamepadInput(["Space","Backslash","Backquote"],b.SPECIAL);this.Gamepad.setGamepadButtonsToResponsiveGamepadInput([16],b.SPECIAL);this.plugins=[];this.inputChangeMap={};this.inputChangeOldState={};this.cancelInputChangeListener=void 0}getVersion(){return"1.0.0"}enable(){this.Keyboard.enable();
this.Gamepad.enable();this.TouchInput.enable();0<Object.keys(this.inputChangeMap).length&&this._startInputChangeInterval();this._enabled=!0}disable(){this.Keyboard.disable();this.Gamepad.disable();this.TouchInput.disable();this.cancelInputChangeListener&&(this.cancelInputChangeListener(),this.cancelInputChangeListener=void 0);this._enabled=!1}isEnabled(){return this._enabled}addPlugin(a){this.plugins.push(a);if(a.onAddPlugin)a.onAddPlugin();return()=>{if(a.onRemovePlugin)a.onRemovePlugin();this.plugins.splice(this.plugins.indexOf(a),
1)}}getState(){if(!this._enabled)return{};let a=f({},b),c=this.Gamepad.getState(),e=this.TouchInput.getState(),d=this.Keyboard.getState();a=f({},b);Object.keys(a).forEach((b)=>{a[b]=c[b]||e[b]||d[b]});["LEFT","RIGHT"].forEach((c)=>{[b[`${c}_ANALOG_HORIZONTAL_AXIS`],b[`${c}_ANALOG_VERTICAL_AXIS`]].forEach((d,e)=>{if("number"!==typeof a[d]){if(0===e||2===e)a[d]=a[b[`${c}_ANALOG_RIGHT`]]?1:a[b[`${c}_ANALOG_LEFT`]]?-1:0;if(1===e||3===e)a[d]=a[b[`${c}_ANALOG_UP`]]?-1:a[b[`${c}_ANALOG_DOWN`]]?1:0}})});
a.UP=a.DPAD_UP||a.LEFT_ANALOG_UP;a.RIGHT=a.DPAD_RIGHT||a.LEFT_ANALOG_RIGHT;a.DOWN=a.DPAD_DOWN||a.LEFT_ANALOG_DOWN;a.LEFT=a.DPAD_LEFT||a.LEFT_ANALOG_LEFT;Object.keys(a).forEach((b)=>{if(void 0===a[b]||"string"===typeof a[b])a[b]=!1});this.plugins.forEach((b)=>{b.onGetState&&(b=b.onGetState(a))&&(this.state=b)});return a}onInputsChange(a,b){"string"===typeof a&&(a=[a]);this.inputChangeMap[a]={codes:a,callback:b};this.cancelInputChangeListener||this._startInputChangeInterval();return()=>{delete this.inputChangeMap[a]}}_startInputChangeInterval(){let a=
setInterval(this._inputChangeIntervalHandler.bind(this),16);this.cancelInputChangeListener=()=>clearInterval(a)}_inputChangeIntervalHandler(){let a=this.getState(),b=[];Object.keys(a).forEach((c)=>{a[c]!==this.inputChangeOldState[c]&&b.push(c)});Object.keys(this.inputChangeMap).forEach((c)=>{this.inputChangeMap[c].codes.some((a)=>b.includes(a))&&this.inputChangeMap[c].callback(a)});this.inputChangeOldState=a}}let z=new y;g.ResponsiveGamepad=z;Object.defineProperty(g,"__esModule",{value:!0})});
